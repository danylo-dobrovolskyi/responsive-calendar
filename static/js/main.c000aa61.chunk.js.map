{"version":3,"sources":["components/WeeklyScheduler/HourCell.tsx","components/WeeklyScheduler/DayRow.tsx","utils/sendDataToServer.ts","components/WeeklyScheduler/WeeklyScheduler.tsx","App.js","index.js"],"names":["HourCell","day","bt","et","data","setData","isMouseDown","setIsMouseDown","toggleCell","dayData","index","findIndex","interval","filter","_","i","className","some","onMouseDown","onMouseOver","DayRow","length","toUpperCase","onClick","Array","from","sendDataToServer","a","fetch","method","headers","body","JSON","stringify","response","ok","Error","status","json","result","console","log","error","WeeklyScheduler","initialData","onSaveChanges","useState","useEffect","window","addEventListener","removeEventListener","days","map","type","reduce","acc","mo","tu","we","th","fr","sa","su","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAqDeA,EAhD2B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,GACAC,EAKI,EALJA,GACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAQMC,EAAa,WACjB,IAAMC,EAAUL,EAAKH,GACfS,EAAQD,EAAQE,WACpB,SAACC,GAAD,OAA0CA,EAASV,KAAOA,GAAMU,EAAST,KAAOA,KAIhFE,GADa,IAAXK,EACM,2BAAKN,GAAN,kBAAaH,EAAb,sBAAuBQ,GAAvB,CAAgC,CAAEP,KAAIC,UAErC,2BACHC,GADE,kBAEJH,EAAMQ,EAAQI,QAAO,SAACC,EAAGC,GAAJ,OAAkBA,IAAML,SAKpD,OACE,oBACEM,UAvBKZ,EAAKH,GAAKgB,MACf,SAACL,GAAD,OAA0CA,EAASV,KAAOA,GAAMU,EAAST,KAAOA,KAsBlD,qBAAuB,GACrDe,YAAa,WACXX,GAAe,GACfC,KAEFW,YAAa,WACPb,GACFE,QCaKY,EApDuB,SAAC,GAMhC,IALLnB,EAKI,EALJA,IACAG,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAkBA,OACE,+BACE,oBAAIS,UAAWZ,EAAKH,GAAKoB,OAAS,EAAI,mBAAqB,GAA3D,SACGpB,EAAIqB,gBAEP,oBACEN,UAAS,2BACc,KAArBZ,EAAKH,GAAKoB,OAAgB,4BAA8B,IAE1DE,QAzBe,WAGI,KAFPnB,EAAKH,GAEToB,OACVhB,EAAQ,2BAAKD,GAAN,kBAAaH,EAAM,MAE1BI,EAAQ,2BACHD,GADE,kBAEJH,EAAMuB,MAAMC,KAAK,CAAEJ,OAAQ,KAAM,SAACP,EAAGC,GAAJ,MAAW,CAC3Cb,GAAQ,GAAJa,EACJZ,GAAc,IAATY,EAAI,GAAU,UAWvB,SAMwB,KAArBX,EAAKH,GAAKoB,QAAiB,mBAAGL,UAAU,wBAE1CQ,MAAMC,KAAK,CAAEJ,OAAQ,KAAM,SAACP,EAAGC,GAAJ,OAC1B,cAAC,EAAD,CAEEd,IAAKA,EACLC,GAAQ,GAAJa,EACJZ,GAAc,IAATY,EAAI,GAAU,EACnBX,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,GAPXQ,U,wBCzCFW,EAAgB,uCAAG,WAAOtB,GAAP,iBAAAuB,EAAA,+EAELC,MAAM,oCAAqC,CAChEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU7B,KAPK,WAEtB8B,EAFsB,QAUdC,GAVc,sBAWpB,IAAIC,MAAJ,8BAAiCF,EAASG,SAXtB,uBAcPH,EAASI,OAdF,OActBC,EAdsB,OAgB5BC,QAAQC,IAAI,2BAA4BF,GAhBZ,kDAkB5BC,QAAQE,MAAM,sCAAd,MAlB4B,0DAAH,sDCuEdC,EAlEyC,SAAC,GAGlD,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,cAEA,EAAwBC,mBAAkBF,GAA1C,mBAAOxC,EAAP,KAAaC,EAAb,KACA,EAAsCyC,oBAAS,GAA/C,mBAAOxC,EAAP,KAAoBC,EAApB,KAEAwC,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,WAAW,kBAAM1C,GAAe,MAEjD,kBAAMyC,OAAOE,oBAAoB,WAAW,kBAAM3C,GAAe,SACvE,IAEH,IAAM4C,EAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAElD,OACE,gCACE,oBAAInC,UAAU,0BAAd,0BACA,sBAAKA,UAAU,mBAAf,UACE,wBAAOA,UAAU,0BAAjB,UACE,gCACE,+BACE,uBACA,oBAAIA,UAAU,kCAAd,qBACCQ,MAAMC,KAAK,CAAEJ,OAAQ,KAAM,SAACP,EAAGC,GAAJ,OAC1B,6BAAaA,EAAI,IAAM,EAAV,UAAiBA,EAAjB,OAA0B,IAA9BA,WAIf,gCACGoC,EAAKC,KAAI,SAACnD,GAAD,OACR,cAAC,EAAD,CAEEA,IAAKA,EACLG,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,GALXN,WAUb,sBAAKe,UAAU,oBAAf,UACE,wBACEqC,KAAK,SACLrC,UAAU,kCACVO,QAAS,kBAAMlB,EAAQ8C,EAAKG,QAAO,SAACC,EAAKtD,GAAN,mBAAC,eAAmBsD,GAApB,kBAA0BtD,EAAM,OAAO,MAH5E,mBAOA,wBACEoD,KAAK,SACLrC,UAAU,iCACVO,QAAS,WACPsB,EAAczC,GACdsB,EAAiBtB,IALrB,oCCbJwC,EAAc,CAClBY,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAkBSC,EAfH,WAKV,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,EAAD,CACE4B,YAAaA,EACbC,cARoB,SAACzC,GACzBoC,QAAQC,IAAI,cAAerC,S,MClD/B4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c000aa61.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/mouse-events-have-key-events */\nimport React from 'react';\nimport { HourCellProps } from '../../utils/types';\n\nconst HourCell: React.FC<HourCellProps> = ({\n  day,\n  bt,\n  et,\n  data,\n  setData,\n  isMouseDown,\n  setIsMouseDown,\n}) => {\n  const isCellSelected = () => {\n    return data[day].some(\n      (interval: { bt: number; et: number }) => interval.bt === bt && interval.et === et,\n    );\n  };\n\n  const toggleCell = () => {\n    const dayData = data[day];\n    const index = dayData.findIndex(\n      (interval: { bt: number; et: number }) => interval.bt === bt && interval.et === et,\n    );\n\n    if (index === -1) {\n      setData({ ...data, [day]: [...dayData, { bt, et }] });\n    } else {\n      setData({\n        ...data,\n        [day]: dayData.filter((_, i: number) => i !== index),\n      });\n    }\n  };\n\n  return (\n    <td\n      className={isCellSelected() ? 'hour-cell_selected' : ''}\n      onMouseDown={() => {\n        setIsMouseDown(true);\n        toggleCell();\n      }}\n      onMouseOver={() => {\n        if (isMouseDown) {\n          toggleCell();\n        }\n      }}\n    >\n    </td>\n  );\n};\n\nexport default HourCell;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport HourCell from './HourCell';\nimport { DayRowProps } from '../../utils/types';\n\nconst DayRow: React.FC<DayRowProps> = ({\n  day,\n  data,\n  setData,\n  isMouseDown,\n  setIsMouseDown,\n}) => {\n  const toggleAllDay = () => {\n    const dayData = data[day];\n\n    if (dayData.length === 24) {\n      setData({ ...data, [day]: [] });\n    } else {\n      setData({\n        ...data,\n        [day]: Array.from({ length: 24 }, (_, i) => ({\n          bt: i * 60,\n          et: (i + 1) * 60 - 1,\n        })),\n      });\n    }\n  };\n\n  return (\n    <tr>\n      <td className={data[day].length > 0 ? 'day-row_selected' : ''}>\n        {day.toUpperCase()}\n      </td>\n      <td\n        className={`day-row__all-day ${\n          data[day].length === 24 ? 'day-row__all-day_selected' : ''\n        }`}\n        onClick={toggleAllDay}\n      >\n        {data[day].length === 24 && <i className=\"fa fa-check fa-lg\"></i>}\n      </td>\n      {Array.from({ length: 24 }, (_, i) => (\n        <HourCell\n          key={i}\n          day={day}\n          bt={i * 60}\n          et={(i + 1) * 60 - 1}\n          data={data}\n          setData={setData}\n          isMouseDown={isMouseDown}\n          setIsMouseDown={setIsMouseDown}\n        />\n      ))}\n    </tr>\n  );\n};\n\nexport default DayRow;\n","/* eslint-disable no-console */\nimport { DayData } from './types';\n\nexport const sendDataToServer = async (data: DayData) => {\n  try {\n    const response = await fetch('https://your-api-url.com/endpoint', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const result = await response.json();\n\n    console.log('Data saved successfully:', result);\n  } catch (error) {\n    console.error('Error while sending data to server:', error);\n  }\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n\nimport React, { useState, useEffect } from 'react';\nimport './styles/WeeklyScheduler.scss';\nimport DayRow from './DayRow';\nimport { WeeklySchedulerProps, DayData } from '../../utils/types';\nimport { sendDataToServer } from '../../utils/sendDataToServer';\n\nconst WeeklyScheduler: React.FC<WeeklySchedulerProps> = ({\n  initialData,\n  onSaveChanges,\n}) => {\n  const [data, setData] = useState<DayData>(initialData);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('mouseup', () => setIsMouseDown(false));\n\n    return () => window.removeEventListener('mouseup', () => setIsMouseDown(false));\n  }, []);\n\n  const days = ['mo', 'tu', 'we', 'th', 'fr', 'sa', 'su'];\n\n  return (\n    <div>\n      <h1 className=\"weekly-scheduler__title\">SET SCHEDULE</h1>\n      <div className=\"weekly-scheduler\">\n        <table className=\"weekly-scheduler__table\">\n          <thead>\n            <tr>\n              <th></th>\n              <th className=\"weekly-scheduler__table--header\">ALL DAY</th>\n              {Array.from({ length: 24 }, (_, i) => (\n                <th key={i}>{i % 3 === 0 ? `${i}:00` : ''}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {days.map((day) => (\n              <DayRow\n                key={day}\n                day={day}\n                data={data}\n                setData={setData}\n                isMouseDown={isMouseDown}\n                setIsMouseDown={setIsMouseDown}\n              />\n            ))}\n          </tbody>\n        </table>\n        <div className=\"button__container\">\n          <button\n            type=\"button\"\n            className=\"button__container--clear-button\"\n            onClick={() => setData(days.reduce((acc, day) => ({ ...acc, [day]: [] }), {}))}\n          >\n            Clear\n          </button>\n          <button\n            type=\"button\"\n            className=\"button__container--save-button\"\n            onClick={() => {\n              onSaveChanges(data);\n              sendDataToServer(data);\n            }}\n          >\n            Save changes\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyScheduler;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable no-console */\n\n// import { React, useState, useEffect } from 'react';\n// import './App.scss';\n// import WeeklyScheduler from './components/WeeklyScheduler/WeeklyScheduler';\n// import { fetchData } from './utils/fetchData';\n// import { sendDataToServer } from './utils/sendDataToServer';\n// import { DayData } from './types';\n\n// const App = () => {\n//   const [data, setData] = useState<DayData | null>(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       const fetchedData = await fetchData();\n\n//       setData(fetchedData);\n//     };\n\n//     getData();\n//   }, []);\n\n//   const handleSaveChanges = async (updatedData: DayData) => {\n//     console.log('Data saved:', updatedData);\n//     await sendDataToServer(updatedData);\n//   };\n\n//   if (!data) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <WeeklyScheduler initialData={data} onSaveChanges={handleSaveChanges} />\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport './App.scss';\nimport WeeklyScheduler from './components/WeeklyScheduler/WeeklyScheduler';\n\nconst initialData = {\n  mo: [],\n  tu: [],\n  we: [],\n  th: [],\n  fr: [],\n  sa: [],\n  su: [],\n};\n\nconst App = () => {\n  const handleSaveChanges = (data) => {\n    console.log('Data saved:', data);\n  };\n\n  return (\n    <div className=\"App\">\n      <WeeklyScheduler\n        initialData={initialData}\n        onSaveChanges={handleSaveChanges}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}